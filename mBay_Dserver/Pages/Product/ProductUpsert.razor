@page "/product/create"
@page "/product/edit/{Id:int}"
@inject ICategoryRepository _categoryRepository
@inject IProductRepository _productRepository
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">
        @Title Product
    </h3>
    <div class="col-12">
       
            <EditForm Model="Product" OnValidSubmit="UpsertProduct">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary></ValidationSummary>
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Product.Name"></InputText>
                    <ValidationMessage For="(()=>Product.Name)"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Açıklama</label>
                    <InputText @bind-Value="Product.Description"></InputText>
                    <ValidationMessage For="(()=>Product.Name)"></ValidationMessage>
                </div>
                <div class="row pt-3">
                    <div class="form-group col-6">
                        <div class="form-check">
                            <label class="form-check-label">Shop Favourites</label>
                            <InputCheckbox @bind-Value="Product.ShopFavourites" class="form-check-input"></InputCheckbox>
                        </div>

                    </div>
                    <div class="form-group col-6">
                        <div class="form-check">
                            <label class="form-check-label">Customer Favourites</label>
                            <InputCheckbox @bind-Value="Product.CustomerFavourites" class="form-check-input"></InputCheckbox>
                        </div>

                    </div>
                </div>
                <div class="form-group col-6">
                    <label>Category</label>
                    <InputSelect @bind-Value="Product.CategoryId" class="form-select">
                        <option value="0" disabled="disabled" selected>--Selected Category--</option>
                        @foreach (var cat in Categories)
                        {
                            <option value="@cat.Id">@cat.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="()=>Product.CategoryId"></ValidationMessage>
                </div>

                <div class="form-group">
                    <label>Author</label>
                    <InputText @bind-Value="Product.Author"></InputText>
                    <ValidationMessage For="(()=>Product.Name)"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="product" class=" btn btn-warning">Back to product</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private ProductDTO Product { get; set; } = new()
        {
            ImageUrl = "/images/default.jpg"
        };
    private IEnumerable<CategoryDTO> Categories { get; set; } = new List<CategoryDTO>();
    private string Title { get; set; } = "Create";
    

    protected override async Task OnInitializedAsync()
    {
        Categories = await _categoryRepository.GetAll();

        Product = await _productRepository.GetById(Id);
        Title = "Updated";
    }
    private async Task UpsertProduct()
    {
        if (Id == 0)
        {
            var result = await _productRepository.Create(Product);
        }
        else
        {
            var result = await _productRepository.Update(Product);
        }
        _navigationManager.NavigateTo("product");
    }
}
